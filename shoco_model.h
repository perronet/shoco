#ifndef _SHOCO_INTERNAL
#error This header file is only to be included by 'shoco.c'.
#endif
#pragma once
/*
This file was generated by 'generate_compressor_model.py'
so don't edit this by hand. Also, do not include this file
anywhere. It is internal to 'shoco.c'. Include 'shoco.h'
if you want to use shoco in your project.
*/

#define MIN_CHR 37
#define MAX_CHR 122

static const char chrs_by_chr_id[32] = {
  'e', 'o', 't', 'a', 'i', '/', 'n', 'c', 's', 'r', '.', 'm', 'p', 'l', 'd', '-', 'h', 'w', 'u', 'g', 'b', '1', '0', 'f', '2', 'y', '=', 'k', '%', '8', '3', 'v'
};

static const int8_t chr_ids_by_chr[256] = {
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 28, -1, -1, -1, -1, -1, -1, -1, 15, 10, 5, 22, 21, 24, 30, -1, -1, -1, -1, 29, -1, -1, -1, -1, 26, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, 20, 7, 14, 0, 23, 19, 16, 4, -1, 27, 13, 11, 6, 1, 12, -1, 9, 8, 2, 18, 31, 17, -1, 25, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1
};

static const int8_t successor_ids_by_chr_id_and_chr_id[32][32] = {
  {15, -1, 4, 7, -1, 11, 1, 13, 2, 0, 3, 10, -1, 9, 8, 5, -1, 12, -1, -1, 14, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
  {-1, 6, 8, -1, -1, -1, 1, 12, 9, 2, 10, 0, 3, 7, 11, 15, -1, 13, 4, 5, -1, -1, -1, 14, -1, -1, -1, -1, -1, -1, -1, -1},
  {0, 5, 1, 6, 2, 8, -1, -1, 10, 9, 11, 4, 3, -1, -1, 12, 7, -1, 13, -1, -1, -1, -1, -1, -1, 15, -1, -1, -1, -1, -1, -1},
  {-1, -1, 2, -1, 10, 15, 0, 6, 4, 1, 9, 5, 12, 3, 8, 13, -1, -1, 14, 7, -1, -1, -1, -1, -1, 11, -1, -1, -1, -1, -1, -1},
  {5, 3, 4, 8, -1, -1, 0, 1, 6, 9, -1, 10, 13, 7, 2, 15, -1, -1, -1, 12, -1, -1, -1, -1, -1, -1, -1, 11, -1, -1, -1, 14},
  {13, -1, 8, 6, 2, 0, 15, 3, 4, -1, -1, 7, 5, 14, 11, -1, -1, 1, -1, -1, 12, 9, -1, -1, 10, -1, -1, -1, -1, -1, -1, -1},
  {1, 12, 0, 6, 8, 9, 15, 10, 7, -1, 4, -1, -1, -1, 2, 5, -1, -1, -1, 3, -1, -1, -1, 13, -1, -1, 11, 14, -1, -1, -1, -1},
  {3, 0, 4, 1, 7, 13, -1, 12, 9, 8, 11, 14, -1, 5, -1, 15, 2, -1, 10, -1, -1, -1, -1, -1, -1, -1, -1, 6, -1, -1, -1, -1},
  {3, 8, 0, 11, 5, 1, -1, 10, 7, -1, 2, -1, 6, -1, -1, 4, 9, -1, 12, -1, -1, -1, -1, -1, -1, -1, -1, 13, -1, -1, -1, -1},
  {0, 3, 4, 2, 1, 10, 15, 11, 5, -1, 8, 14, -1, -1, 12, 9, -1, -1, 13, 6, -1, -1, -1, -1, -1, 7, -1, -1, -1, -1, -1, -1},
  {8, 5, 14, 4, 9, -1, 3, 0, 7, -1, -1, 12, 2, -1, 11, -1, 1, 10, 13, 15, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
  {3, 6, -1, 2, 4, 0, -1, -1, 11, -1, 7, 14, 5, 1, 15, 10, -1, -1, 9, -1, 13, -1, -1, -1, -1, 12, -1, -1, -1, -1, -1, -1},
  {4, 3, 8, 1, 9, 11, -1, -1, 10, 6, 14, -1, 12, 5, -1, 15, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
  {0, 3, 9, 2, 1, 6, -1, -1, 8, -1, 5, 15, -1, 4, 12, 7, -1, -1, 10, -1, -1, -1, -1, -1, -1, 11, 13, -1, -1, -1, -1, -1},
  {0, 4, -1, 3, 2, 9, -1, -1, 8, 10, 7, -1, -1, -1, 14, 5, -1, -1, 6, -1, 12, -1, -1, -1, -1, -1, 1, -1, -1, 15, 11, -1},
  {-1, 12, 3, 2, 10, -1, -1, 1, 0, 9, -1, 7, 6, 11, 4, -1, 15, 13, -1, -1, 5, 14, -1, 8, -1, -1, -1, -1, -1, -1, -1, -1},
  {2, 1, 0, 4, 5, 9, 12, -1, -1, 10, 7, -1, 3, 15, -1, 6, -1, -1, 8, -1, -1, -1, -1, -1, -1, 14, 11, -1, -1, -1, -1, -1},
  {3, 7, 14, 4, 2, 9, 8, -1, 5, 13, 1, -1, 10, -1, -1, 12, 11, 0, -1, -1, -1, -1, -1, -1, -1, -1, 6, -1, -1, -1, -1, -1},
  {5, -1, 3, 13, 12, 10, 2, 9, 0, 1, 15, 7, 8, 4, 14, -1, -1, -1, -1, -1, 6, -1, -1, -1, -1, -1, -1, 11, -1, -1, -1, -1},
  {0, 3, 15, 4, 2, 1, 12, -1, 8, 5, 6, -1, -1, 11, -1, 7, 10, -1, 9, -1, -1, -1, -1, -1, -1, 14, 13, -1, -1, -1, -1, -1},
  {1, 2, -1, 0, 3, 9, -1, 12, 7, 5, 8, 11, -1, 4, -1, -1, -1, -1, 6, -1, 10, 14, -1, -1, 15, 13, -1, -1, -1, -1, -1, -1},
  {-1, -1, -1, -1, -1, 4, -1, -1, -1, -1, 13, -1, -1, -1, -1, 14, -1, -1, -1, -1, -1, 0, 1, 15, 2, -1, -1, -1, 12, 8, 3, -1},
  {-1, -1, -1, -1, -1, 6, -1, -1, -1, -1, 13, -1, -1, -1, 15, 12, -1, -1, -1, -1, -1, 1, 0, -1, 3, -1, -1, -1, 10, 7, 8, -1},
  {3, 0, 9, 2, 1, -1, -1, 10, -1, 4, 11, -1, -1, 6, 15, 7, -1, -1, 8, -1, 14, -1, -1, 5, -1, -1, 13, -1, -1, 12, -1, -1},
  {-1, -1, -1, -1, -1, 7, -1, -1, -1, -1, 11, -1, -1, -1, -1, 14, -1, -1, -1, -1, -1, 1, 0, -1, 4, -1, -1, -1, 13, 9, 2, -1},
  {5, 3, 14, 6, -1, 2, 15, 12, 7, 10, 0, 13, 4, 9, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
  {-1, -1, -1, 2, -1, -1, -1, 0, 11, -1, -1, -1, -1, -1, 10, -1, -1, -1, -1, -1, -1, 1, 9, -1, 3, -1, -1, -1, -1, 13, 5, -1},
  {1, 7, 12, 3, 0, 4, 15, -1, 5, 11, 2, -1, -1, 9, -1, 6, 14, -1, 8, -1, -1, -1, -1, -1, -1, 13, 10, -1, -1, -1, -1, -1},
  {11, -1, -1, 12, -1, -1, -1, 8, -1, -1, -1, -1, -1, -1, 15, -1, -1, -1, -1, -1, 10, -1, -1, -1, 4, -1, -1, -1, -1, 0, 7, -1},
  {15, -1, -1, -1, -1, 11, -1, -1, -1, -1, 12, -1, -1, -1, 14, 13, -1, -1, -1, -1, -1, 6, 1, -1, 7, -1, -1, -1, 0, 2, 5, -1},
  {-1, -1, -1, -1, -1, 5, -1, 15, -1, -1, 13, -1, -1, -1, 11, 14, -1, -1, -1, -1, -1, 7, 2, -1, 3, -1, -1, -1, 0, 8, 9, -1},
  {1, 3, -1, 2, 0, 6, 10, 12, 9, 13, 5, -1, -1, -1, 14, 8, -1, -1, -1, -1, 7, -1, -1, -1, -1, 15, 4, -1, -1, -1, -1, -1}
};

static const int8_t chrs_by_chr_and_successor_id[MAX_CHR - MIN_CHR][16] = {
  {'8', 'E', 'B', 'D', '2', 'A', '9', '3', 'c', '5', 'b', 'e', 'a', 'C', '7', 'd'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'s', 'c', 'a', 't', 'd', 'b', 'p', 'm', 'f', 'r', 'i', 'l', 'o', 'w', '1', 'h'},
  {'c', 'h', 'p', 'n', 'a', 'o', 'b', 's', 'e', 'i', 'w', 'd', 'm', 'u', 't', 'g'},
  {'/', 'w', 'i', 'c', 's', 'p', 'a', 'm', 't', '1', '2', 'd', 'b', 'e', 'l', 'n'},
  {'0', '1', '9', '2', '5', '4', '/', '8', '3', '7', '%', '6', '-', '.', '&', 'd'},
  {'1', '0', '2', '3', '/', '5', '9', '4', '8', '6', '7', '&', '%', '.', '-', 'f'},
  {'0', '1', '3', '5', '2', '4', '6', '/', '9', '8', '7', '.', 'F', '%', '-', '&'},
  {'%', '4', '0', '2', '6', '/', '5', '1', '8', '3', '7', 'd', '9', '.', '-', 'c'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'%', '0', '8', '4', '5', '3', '1', '2', '7', '9', '6', '/', '.', '-', 'd', 'e'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'c', '1', 'a', '2', '5', '3', '4', '&', '6', '0', 'd', 's', '7', '8', '9', '_'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'n', 'r', 't', 'l', 's', 'm', 'c', 'g', 'd', '.', 'i', 'y', 'p', '-', 'u', '/'},
  {'a', 'e', 'o', 'i', 'l', 'r', 'u', 's', '.', '/', 'b', 'm', 'c', 'y', '1', '2'},
  {'o', 'a', 'h', 'e', 't', 'l', 'k', 'i', 'r', 's', 'u', '.', 'c', '/', 'm', '-'},
  {'e', '=', 'i', 'a', 'o', '-', 'u', '.', 's', '/', 'r', '3', 'b', '_', 'd', '8'},
  {'r', 'n', 's', '.', 't', '-', 'x', 'a', 'd', 'l', 'm', '/', 'w', 'c', 'b', 'e'},
  {'o', 'i', 'a', 'e', 'r', 'f', 'l', '-', 'u', 't', 'c', '.', '8', '=', 'b', 'd'},
  {'e', '/', 'i', 'o', 'a', 'r', '.', '-', 's', 'u', 'h', 'l', 'n', '=', 'y', 't'},
  {'t', 'o', 'e', 'p', 'a', 'i', '-', '.', 'u', '/', 'r', '=', 'n', '?', 'y', 'l'},
  {'n', 'c', 'd', 'o', 't', 'e', 's', 'l', 'a', 'r', 'm', 'k', 'g', 'p', 'v', '-'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'i', 'e', '.', 'a', '/', 's', '-', 'o', 'u', 'l', '=', 'r', 't', 'y', 'h', 'n'},
  {'e', 'i', 'a', 'o', 'l', '.', '/', '-', 's', 't', 'u', 'y', 'd', '=', '?', 'm'},
  {'/', 'l', 'a', 'e', 'i', 'p', 'o', '.', '_', 'u', '-', 's', 'y', 'b', 'm', 'd'},
  {'t', 'e', 'd', 'g', '.', '-', 'a', 's', 'i', '/', 'c', '=', 'o', 'f', 'k', 'n'},
  {'m', 'n', 'r', 'p', 'u', 'g', 'o', 'l', 't', 's', '.', 'd', 'c', 'w', 'f', '-'},
  {':', 'a', 'h', 'o', 'e', 'l', 'r', '?', 't', 'i', 's', '/', 'p', ';', '.', '-'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'e', 'i', 'a', 'o', 't', 's', 'g', 'y', '.', '-', '/', 'c', 'd', 'u', 'm', 'n'},
  {'t', '/', '.', 'e', '-', 'i', 'p', 's', 'o', 'h', 'c', 'a', 'u', 'k', '_', ':'},
  {'e', 't', 'i', 'p', 'm', 'o', 'a', 'h', '/', 'r', 's', '.', '-', 'u', '&', 'y'},
  {'s', 'r', 'n', 't', 'l', 'e', 'b', 'm', 'p', 'c', '/', 'k', 'i', 'a', 'd', '.'},
  {'i', 'e', 'a', 'o', '=', '.', '/', 'b', '-', 's', 'n', 'L', 'c', 'r', 'd', 'y'},
  {'w', '.', 'i', 'e', 'a', 's', '=', 'o', 'n', '/', 'p', 'h', '-', 'r', 't', '_'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'.', '-', '/', 'o', 'p', 'e', 'a', 's', '_', 'l', 'r', '&', 'c', 'm', 't', 'n'}
};

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable: 4324)    // structure was padded due to __declspec(align())
#endif

typedef struct Pack {
  const uint32_t word;
  const unsigned int bytes_packed;
  const unsigned int bytes_unpacked;
  const unsigned int offsets[8];
  const int16_t _ALIGNED masks[8];
  const char header_mask;
  const char header;
} Pack;

#ifdef _MSC_VER
#pragma warning(pop)
#endif

#define PACK_COUNT 3
#define MAX_SUCCESSOR_N 7

static const Pack packs[PACK_COUNT] = {
  { 0x80000000, 1, 2, { 26, 24, 24, 24, 24, 24, 24, 24 }, { 15, 3, 0, 0, 0, 0, 0, 0 }, 0xc0, 0x80 },
  { 0xc0000000, 2, 4, { 25, 22, 19, 16, 16, 16, 16, 16 }, { 15, 7, 7, 7, 0, 0, 0, 0 }, 0xe0, 0xc0 },
  { 0xe0000000, 4, 8, { 23, 19, 15, 11, 8, 5, 2, 0 }, { 31, 15, 15, 15, 7, 7, 7, 3 }, 0xf0, 0xe0 }
};
